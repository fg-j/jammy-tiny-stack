name: Create Release

on:
  # schedule:
  # Every 5 minutes
  # - cron: '*/5 * * * *'
  # TODO: Set back to 5 minutes
  # - cron: '*/30 * * * *'
  push:
    branches:
    - main
    paths:
    - 'stack.toml'
    - '**.Dockerfile'
    - 'run/*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the release to cut (e.g. 1.2.3)'
        required: false

concurrency: release

jobs:
  poll_usns:
    name: Poll USNs
    runs-on: ubuntu-latest
    outputs:
      usns: ${{ steps.usns.outputs.usns }}
    steps:
    - name: Find Previous Build Receipt
      id: build_receipt
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/find-release-asset@main
      with:
        asset_pattern: "build-receipt.txt"
        search_depth: 1
        repo: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Find Previous Run Receipt
      id: run_receipt
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/find-release-asset@main
      with:
        asset_pattern: "run-receipt.txt"
        search_depth: 1
        repo: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Download Previous Build Receipt
      if: ${{ steps.build_receipt.outputs.url != '' }}
      uses: paketo-buildpacks/github-config/actions/release/download-asset@main
      with:
        url: ${{ steps.build_receipt.outputs.url }}
        output: "/github/workspace/build-receipt.txt"
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Download Previous Run Receipt
      if: ${{ steps.run_receipt.outputs.url != '' }}
      uses: paketo-buildpacks/github-config/actions/release/download-asset@main
      with:
        url: ${{ steps.run_receipt.outputs.url }}
        output: "/github/workspace/run-receipt.txt"
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Get Package List
      id: packages
      # TODO: Switch repo name below
      if: ${{ steps.build_receipt.outputs.url != '' && steps.run_receipt.outputs.url != '' }}
      uses: fg-j/jammy-tiny-stack/actions/generate-package-list@main
      with:
        build_receipt: "${{ github.workspace }}/build-receipt.txt"
        run_receipt: "${{ github.workspace }}/run-receipt.txt"

    - name: Find Previous Patched USNs
      id: patched_json
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/find-release-asset@main
      with:
        asset_pattern: "patched-usns.json"
        search_depth: "-1"   # Search all releases
        repo: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Download Previous Patched USNs
      if: ${{ steps.patched_json.outputs.url != '' }}
      uses: paketo-buildpacks/github-config/actions/release/download-asset@main
      with:
        url: ${{ steps.patched_json.outputs.url }}
        output: "/github/workspace/patched-usns.json"
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Output Patched USNs as JSON String
      id: patched
      # TODO: Switch repo name below
      if: ${{ steps.patched_json.outputs.url != '' }}
      run: |
        patched=$( cat "${GITHUB_WORKSPACE}/patched-usns.json" | jq --compact-output . )
        printf "::set-output name=patched::%s\n" "${patched}"

    - name: Get New USNs
      id: usns
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/get-usns@main
      with:
        distribution: 'jammy'
        packages: ${{ steps.packages.outputs.packages }}
        last_usns: ${{ steps.patched.outputs.patched }}

    - name: File Issue
      if: ${{ failure() }}
      # TODO: Update this issue filing to flag USN failure
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z "${release_issue}" ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment "${release_issue}" --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo "${release_issue}"

  check_images:
    name: Check Images
    needs: poll_usns
    if: ${{ needs.poll_usns.outputs.usns != '' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout/@v3

      # TODO: check build image too.
    - name: Find Previous Run image
      id: previous_run_image
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/find-release-asset@main
      with:
        asset_pattern: "run.oci"
        search_depth: -1 # TODO: this should be 1 once we regularly attach images to releases
        repo: ${{ github.repository }}
        strict: true
      env:
        GITHUB_TOKEN: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Download Previous Run image
      uses: paketo-buildpacks/github-config/actions/release/download-asset@main
      with:
        url: ${{ steps.previous_run_image.outputs.url }}
        output: "${{ github.workspace }}/previous_run_image.oci"
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}

    - name: Create stack
      run: ./scripts/create.sh

    - name: Validate Run Image
      id: packages
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/validate-image-changed@main
      with:
        previous_image: "${{ github.workspace }}/previous_run_image.oci"
        image: "build/run.oci"

  test:
    name: Acceptance Test
    needs: check_images
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x

    - name: Checkout
      uses: actions/checkout@v3

      # Diff USNs with latest known USN
      # Only keep going if on push/manual trigger or there's a USNs diff

    # - name: Run Acceptance Tests
    #   run: ./scripts/test.sh --clean

    # - name: Upload Build Image
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: build-image
    #     path: build/build.oci

    # - name: Upload Run Image
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: run-image
    #     path: build/run.oci

    - name: File Issue
      if: ${{ failure() }}
      # TODO: Update this issue filing to flag USN failure
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z "${release_issue}" ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment "${release_issue}" --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo "${release_issue}"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [poll_usns, test]
    steps:
    - name: Checkout With History
      uses: actions/checkout/@v2
      with:
        fetch-depth: 0  # gets full history

    # - name: Download Build Image
    #   id: download-build
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: build-image

    # - name: Download Run Image
    #   id: download-run
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: run-image

    - name: Increment Tag
      if: github.event.inputs.version == ''
      id: semver
      uses: paketo-buildpacks/github-config/actions/tag/increment-tag@main

    - name: Set Release Tag
      id: tag
      run: |
        tag="${{ github.event.inputs.version }}"
        if [ -z "${tag}" ]; then
          tag="${{ steps.semver.outputs.tag }}"
        fi
        echo "::set-output name=tag::${tag}"

    # - name: Generate Package Receipts
    #   id: receipts
    #   run: |
    #     scripts/receipts.sh --build-archive "${{ steps.download-build.outputs.download-path }}/build.oci" \
    #                         --run-archive "${{ steps.download-run.outputs.download-path }}/run.oci" \
    #                         --build-receipt build-receipt.txt \
    #                         --run-receipt run-receipt.txt
    #     echo "::set-output name=build_receipt::build-receipt.txt"
    #     echo "::set-output name=run_receipt::run-receipt.txt"

    - name: Create Release Notes
      id: notes
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/release-notes@main
      with:
        build_image: "paketobuildpacks/build-jammy-tiny:${{ steps.tag.outputs.tag }}"
        run_image: "paketobuildpacks/run-jammy-tiny:${{ steps.tag.outputs.tag }}"
        build_receipt_diff: "+ something"
        run_receipt_diff: "- something else"
        patched_usns: ${{ needs.poll_usns.outputs.usns }}

    - name: Write USNs File
      id: write_usns
      if: ${{ needs.poll_usns.outputs.usns != '[]'  }}
      run: |
        jq . <<< "${USNS}" > "${USNS_PATH}"
        echo "::set-output name=usns::${USNS_PATH}"
      env:
        USNS_PATH: "patched-usns.json"
        USNS: ${{ needs.poll_usns.outputs.usns }}

    - name: Get Repository Name
      id: repo_name
      run: |
        full=${{ github.repository }}
        # Strip off the org and slash from repo name
        # paketo-buildpacks/repo-name --> repo-name
        repo=$(echo "${full}" | sed 's/^.*\///')
        echo "::set-output name=repo_name::${repo}"

    - name: Create Release (with patched USNs)
      if: ${{ steps.write_usns.outputs.usns != '' }}
      uses: paketo-buildpacks/github-config/actions/release/create@main
      with:
        repo: ${{ github.repository }}
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        tag_name: v${{ steps.tag.outputs.tag }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.tag.outputs.tag }}
        body: ${{ steps.notes.outputs.release_body }}
        draft: false
        # assets: |
        #   [
        #     {
        #       "path": "build.oci",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-build.oci",
        #       "content_type": "application/gzip"
        #     },
        #     {
        #       "path": "run.oci",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-run.oci",
        #       "content_type": "application/gzip"
        #     },
        #     {
        #       "path": "${{ steps.receipts.outputs.build_receipt }}",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-build-receipt.txt",
        #       "content_type": "text/plain"
        #     },
        #     {
        #       "path": "${{ steps.receipts.outputs.run_receipt }}",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-run-receipt.txt",
        #       "content_type": "text/plain"
        #     },
        #     {
        #       "path": "${{ steps.write_usns.outputs.usns }}",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-patched-usns.json",
        #       "content_type": "text/plain"
        #     }
        #   ]
        assets: |
          [
            {
              "path": "${{ steps.write_usns.outputs.usns }}",
              "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-patched-usns.json",
              "content_type": "text/plain"
            }
          ]

    - name: Create Release (without patched USNs)
      if: ${{ steps.write_usns.outputs.usns == '' }}
      uses: paketo-buildpacks/github-config/actions/release/create@main
      with:
        repo: ${{ github.repository }}
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        tag_name: v${{ steps.tag.outputs.tag }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.tag.outputs.tag }}
        body: ${{ steps.notes.outputs.release_body }}
        draft: false
        # assets: |
        #   [
        #     {
        #       "path": "build.oci",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-build.oci",
        #       "content_type": "application/gzip"
        #     },
        #     {
        #       "path": "run.oci",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-run.oci",
        #       "content_type": "application/gzip"
        #     },
        #     {
        #       "path": "${{ steps.receipts.outputs.build_receipt }}",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-build-receipt.txt",
        #       "content_type": "text/plain"
        #     },
        #     {
        #       "path": "${{ steps.receipts.outputs.run_receipt }}",
        #       "name": "${{ steps.repo_name.outputs.repo_name }}-${{ steps.tag.outputs.tag }}-run-receipt.txt",
        #       "content_type": "text/plain"
        #     }
        #   ]

      # TODO: Maybe add a step after that validates the release assets?
    - name: File Issue
      if: ${{ failure() }}
      # TODO: Update this issue filing to flag USN failure
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z "${release_issue}" ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment "${release_issue}" --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo "${release_issue}"
