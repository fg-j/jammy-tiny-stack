name: Create Release

on:
  schedule:
  # Every 5 minutes
  # - cron: '*/5 * * * *'
  # TODO: Set back to 5 minutes
  - cron: '*/30 * * * *'
  push:
    branches:
    - main
    paths:
    - 'stack.toml'
    - '**.Dockerfile'
    - 'run/*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the release to cut (e.g. 1.2.3)'
        required: false

concurrency: release

jobs:
  poll_usns:
    name: Poll USNs
    runs-on: ubuntu-latest
    outputs:
      usns: ${{ steps.usns.outputs.usns }}
    steps:
    # - name: "Skip If Non-Cron Trigger"
    #   id: skip
    #   runs: |
    #     # TODO: Check event trigger and skip potentially
    - name: Check USNs
      id: usns
      # if: ${{ steps.skip.outputs.skip == "false" }}
      run: |
        printf "::set-output name=usns::%s\n" '[{ "name": "Hello", "url" : "www.example.com", "description" : "World!" }, { "name": "Goodbye", "url" : "www.example.com", "description" : "Moon!" }]'

    - name: File Issue
      if: ${{ failure() }}
      # TODO: Update this issue filing to flag USN failure
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z $release_issue ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment $release_issue --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo $release_issue

  test:
    name: Acceptance Test
    needs: poll_usns
    if: ${{ needs.poll_usns.outputs.usns != '' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x

    - name: Checkout
      uses: actions/checkout@v3

      # Diff USNs with latest known USN
      # Only keep going if on push/manual trigger or there's a USNs diff

    - name: Run Acceptance Tests
      run: ./scripts/test.sh --clean

    - name: Upload Build Image
      uses: actions/upload-artifact@v3
      with:
        name: build-image
        path: build/build.oci

    - name: Upload Run Image
      uses: actions/upload-artifact@v3
      with:
        name: run-image
        path: build/run.oci

    - name: File Issue
      if: ${{ failure() }}
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z $release_issue ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment $release_issue --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo $release_issue

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [poll_usns, test]
    steps:
    - name: Checkout With History
      uses: actions/checkout/@v2
      with:
        fetch-depth: 0  # gets full history

    - name: Download Build Image
      id: download-build
      uses: actions/download-artifact@v3
      with:
        name: build-image

    - name: Download Run Image
      id: download-run
      uses: actions/download-artifact@v3
      with:
        name: run-image

    - name: Increment Tag
      if: github.event.inputs.version == ''
      id: semver
      uses: paketo-buildpacks/github-config/actions/tag/increment-tag@main

    - name: Set Release Tag
      id: tag
      run: |
        tag="${{ github.event.inputs.version }}"
        if [ -z "${tag}" ]; then
          tag="${{ steps.semver.outputs.tag }}"
        fi
        echo "::set-output name=tag::${tag}"

    - name: Generate Package Receipts
      id: receipts
      run: |
        scripts/receipts.sh --build-archive "${{ steps.download-build.outputs.download-path }}/build.oci" \
                            --run-archive "${{ steps.download-run.outputs.download-path }}/run.oci" \
                            --build-receipt build-receipt.txt \
                            --run-receipt run-receipt.txt
        echo "::set-output name=build_receipt::build-receipt.txt"
        echo "::set-output name=run_receipt::run-receipt.txt"

    - name: Create Release Notes
      id: notes
      # TODO: Switch repo name below
      uses: fg-j/jammy-tiny-stack/actions/release-notes@main
      with:
        build_image: "paketobuildpacks/build-jammy-tiny:${{ steps.tag.outputs.tag }}"
        run_image: "paketobuildpacks/run-jammy-tiny:${{ steps.tag.outputs.tag }}"
        build_receipt_diff: "+ something"
        run_receipt_diff: "- something else"
        patched_usns: ${{ needs.poll_usns.outputs.usns }}

    - name: Create Release
      uses: paketo-buildpacks/github-config/actions/release/create@main
      with:
        repo: ${{ github.repository }}
        token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
        tag_name: v${{ steps.tag.outputs.tag }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.tag.outputs.tag }}
        body: ${{ steps.notes.outputs.release_body }}
        draft: false
        assets: |
          [
            {
              "path": "build.oci",
              "name": "${{ github.event.repository.name }}-${{ steps.tag.outputs.tag }}-build.oci",
              "content_type": "application/gzip"
            },
            {
              "path": "run.oci",
              "name": "${{ github.event.repository.name }}-${{ steps.tag.outputs.tag }}-run.oci",
              "content_type": "application/gzip"
            },
            {
              "path": "${{ steps.receipts.outputs.build_receipt }}",
              "name": "${{ github.event.repository.name }}-${{ steps.tag.outputs.tag }}-build-receipt.txt",
              "content_type": "text/plain"
            },
            {
              "path": "${{ steps.receipts.outputs.run_receipt }}",
              "name": "${{ github.event.repository.name }}-${{ steps.tag.outputs.tag }}-run-receipt.txt",
              "content_type": "text/plain"
            }
          ]

    - name: File Issue
      if: ${{ failure() }}
      run: |
        echo "${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}" | gh auth login --with-token
        release_issue=$(gh issue list --json number --label release-issue --jq .[0].number)
        if [ -z $release_issue ]; \
        then gh issue create \
        --title "Failure: create-release workflow" \
        --label "release-issue" \
        --body "[Create release workflow](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) failed to run. Please take a look to ensure CVE patches can be released. (cc @paketo-buildpacks/stacks-maintainers)" \
        -R ${{github.repository}}; \
        else gh issue comment $release_issue --body "Another failure occurred: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"; \
        fi
        echo $release_issue
